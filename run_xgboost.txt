[/aws/lambda/XGBoost_worker] Checking for old streams...
 - Streams in group: /aws/lambda/XGBoost_worker
Done
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.11894475805820923
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-0.,  1.,  2.,  3.,  4.], dtype=float32), array([1243, 1387, 1424, 1381, 1350]))
====================
Accuracy Score: 0.956963890935888
======Update chosen model event==========
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.11331429871110768
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3., 4.], dtype=float32), array([1245, 1406, 1413, 1391, 1330]))
====================
Accuracy Score: 0.96138540899042
======Update chosen model event==========
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 2.0649598568041005
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1.,  0.,  1.,  2.,  3.,  4.,  5.],
      dtype=float32), array([ 723,  255,  193,   65, 1058,  316,  457,  988, 1273,  128,  376,
        953]))
====================
Accuracy Score: 0.07000736919675755
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 2.0649598568041005
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1.,  0.,  1.,  2.,  3.,  4.,  5.],
      dtype=float32), array([ 723,  255,  193,   65, 1058,  316,  457,  988, 1273,  128,  376,
        953]))
====================
Accuracy Score: 0.07000736919675755
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.07740600537796977
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2, 1280, 1394, 1351, 1375, 1383]))
====================
Accuracy Score: 0.9809874723655122
======Update chosen model event==========
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.07954709504840123
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2, 1275, 1406, 1349, 1373, 1380]))
====================
Accuracy Score: 0.9799557848194547
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 5.055042223040462
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-18., -17., -16., -15., -14., -13., -12., -11., -10.,  -9.,  -8.,
        -7.,  -6.,  -5.,  -4.,  -3.,  -2.,  -1.,   0.,   1.,   2.,   3.,
         4.,   5.,   6.,   7.,   8.,   9.,  10.,  11.,  12.,  13.],
      dtype=float32), array([   2,    8,   31,  188,  346,  224,  169,   98,   80,   63,   37,
         39,   45,  240,  945,  118,   38,   46, 1139,  141,   80,  200,
       1016,  114,   44,  112,  239,  331,  435,  203,   13,    1]))
====================
Accuracy Score: 0.03448784082535004
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 5.055042223040462
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-18., -17., -16., -15., -14., -13., -12., -11., -10.,  -9.,  -8.,
        -7.,  -6.,  -5.,  -4.,  -3.,  -2.,  -1.,   0.,   1.,   2.,   3.,
         4.,   5.,   6.,   7.,   8.,   9.,  10.,  11.,  12.,  13.],
      dtype=float32), array([   2,    8,   31,  188,  346,  224,  169,   98,   80,   63,   37,
         39,   45,  240,  945,  118,   38,   46, 1139,  141,   80,  200,
       1016,  114,   44,  112,  239,  331,  435,  203,   13,    1]))
====================
Accuracy Score: 0.03448784082535004
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.11894475805820923
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-0.,  1.,  2.,  3.,  4.], dtype=float32), array([1243, 1387, 1424, 1381, 1350]))
====================
Accuracy Score: 0.956963890935888
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.11331429871110768
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3., 4.], dtype=float32), array([1245, 1406, 1413, 1391, 1330]))
====================
Accuracy Score: 0.96138540899042
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 2.0649598568041005
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1.,  0.,  1.,  2.,  3.,  4.,  5.],
      dtype=float32), array([ 723,  255,  193,   65, 1058,  316,  457,  988, 1273,  128,  376,
        953]))
====================
Accuracy Score: 0.07000736919675755
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 2.0649598568041005
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1.,  0.,  1.,  2.,  3.,  4.,  5.],
      dtype=float32), array([ 723,  255,  193,   65, 1058,  316,  457,  988, 1273,  128,  376,
        953]))
====================
Accuracy Score: 0.07000736919675755
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.07740600537796977
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2, 1280, 1394, 1351, 1375, 1383]))
====================
Accuracy Score: 0.9809874723655122
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.07954709504840123
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2, 1275, 1406, 1349, 1373, 1380]))
====================
Accuracy Score: 0.9799557848194547
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 5.098525139985932
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-18., -17., -16., -15., -14., -13., -12., -11., -10.,  -9.,  -8.,
        -7.,  -6.,  -5.,  -4.,  -3.,  -2.,  -1.,   0.,   1.,   2.,   3.,
         4.,   5.,   6.,   7.,   8.,   9.,  10.,  11.,  12.,  13.],
      dtype=float32), array([   3,   11,   34,  182,  387,  214,  148,   94,   83,   57,   36,
         40,   45,  303,  884,  113,   39,   60, 1123,  144,   77,  187,
       1054,   88,   40,  111,  217,  342,  456,  194,   18,    1]))
====================
Accuracy Score: 0.0318349299926308
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 5.098525139985932
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-18., -17., -16., -15., -14., -13., -12., -11., -10.,  -9.,  -8.,
        -7.,  -6.,  -5.,  -4.,  -3.,  -2.,  -1.,   0.,   1.,   2.,   3.,
         4.,   5.,   6.,   7.,   8.,   9.,  10.,  11.,  12.,  13.],
      dtype=float32), array([   3,   11,   34,  182,  387,  214,  148,   94,   83,   57,   36,
         40,   45,  303,  884,  113,   39,   60, 1123,  144,   77,  187,
       1054,   88,   40,  111,  217,  342,  456,  194,   18,    1]))
====================
Accuracy Score: 0.0318349299926308
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.05637691246294852
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   1, 1287, 1399, 1347, 1364, 1387]))
====================
Accuracy Score: 0.982903463522476
======Update chosen model event==========
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.055968928793905054
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.], dtype=float32), array([   1, 1289, 1415, 1327, 1355, 1398]))
====================
Accuracy Score: 0.984966838614591
======Update chosen model event==========
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 2.2324359481837175
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.],
      dtype=float32), array([   1, 1157,   98,   31, 1276,  113, 1074,  286,  319, 1037,   36,
        526,  831]))
====================
Accuracy Score: 0.159174649963154
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 2.2324359481837175
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.],
      dtype=float32), array([   1, 1157,   98,   31, 1276,  113, 1074,  286,  319, 1037,   36,
        526,  831]))
====================
Accuracy Score: 0.159174649963154
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.04426832900121094
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2, 1300, 1396, 1330, 1363, 1394]))
====================
Accuracy Score: 0.9893883566691231
======Update chosen model event==========
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.04484691729243397
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2, 1301, 1406, 1321, 1355, 1400]))
====================
Accuracy Score: 0.9901252763448785
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 6.193424270288331
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-19., -18., -17., -16., -15., -14., -13., -12., -11., -10.,  -9.,
        -8.,  -7.,  -6.,  -5.,  -4.,  -3.,  -2.,  -1.,   0.,   1.,   2.,
         3.,   4.,   5.,   6.,   7.,   8.,   9.,  10.,  11.,  12.,  13.,
        14.], dtype=float32), array([   4,   32,  122,  330,  316,  188,  115,   64,   61,   23,   33,
         12,   13,  139, 1076,  123,   22,   29,   24, 1137,  128,   35,
         48,  201, 1059,   53,   28,   44,  114,  228,  368,  449,  159,
          8]))
====================
Accuracy Score: 0.00899042004421518
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 6.193424270288331
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-19., -18., -17., -16., -15., -14., -13., -12., -11., -10.,  -9.,
        -8.,  -7.,  -6.,  -5.,  -4.,  -3.,  -2.,  -1.,   0.,   1.,   2.,
         3.,   4.,   5.,   6.,   7.,   8.,   9.,  10.,  11.,  12.,  13.,
        14.], dtype=float32), array([   4,   32,  122,  330,  316,  188,  115,   64,   61,   23,   33,
         12,   13,  139, 1076,  123,   22,   29,   24, 1137,  128,   35,
         48,  201, 1059,   53,   28,   44,  114,  228,  368,  449,  159,
          8]))
====================
Accuracy Score: 0.00899042004421518
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.05637691246294852
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   1, 1287, 1399, 1347, 1364, 1387]))
====================
Accuracy Score: 0.982903463522476
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.055968928793905054
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.], dtype=float32), array([   1, 1289, 1415, 1327, 1355, 1398]))
====================
Accuracy Score: 0.984966838614591
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 2.2294951031642007
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-5., -4., -3., -2., -1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.],
      dtype=float32), array([1151,  106,   31, 1280,  106, 1054,  305,  330, 1031,   37,  549,
        805]))
====================
Accuracy Score: 0.1578481945467944
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 2.2294951031642007
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-5., -4., -3., -2., -1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.],
      dtype=float32), array([1151,  106,   31, 1280,  106, 1054,  305,  330, 1031,   37,  549,
        805]))
====================
Accuracy Score: 0.1578481945467944
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.04426832900121094
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2, 1300, 1396, 1330, 1363, 1394]))
====================
Accuracy Score: 0.9893883566691231
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.04484691729243397
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2, 1301, 1406, 1321, 1355, 1400]))
====================
Accuracy Score: 0.9901252763448785
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 6.165587135769465
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-19., -18., -17., -16., -15., -14., -13., -12., -11., -10.,  -9.,
        -8.,  -7.,  -6.,  -5.,  -4.,  -3.,  -2.,  -1.,   0.,   1.,   2.,
         3.,   4.,   5.,   6.,   7.,   8.,   9.,  10.,  11.,  12.,  13.,
        14.,  15.], dtype=float32), array([   2,   15,  111,  323,  309,  213,  112,   76,   60,   31,   32,
         16,   10,  127, 1073,  135,   31,   22,   28, 1146,  118,   34,
         55,  190, 1083,   35,   23,   52,  104,  234,  334,  444,  192,
         14,    1]))
====================
Accuracy Score: 0.009874723655121593
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 6.165587135769465
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-19., -18., -17., -16., -15., -14., -13., -12., -11., -10.,  -9.,
        -8.,  -7.,  -6.,  -5.,  -4.,  -3.,  -2.,  -1.,   0.,   1.,   2.,
         3.,   4.,   5.,   6.,   7.,   8.,   9.,  10.,  11.,  12.,  13.,
        14.,  15.], dtype=float32), array([   2,   15,  111,  323,  309,  213,  112,   76,   60,   31,   32,
         16,   10,  127, 1073,  135,   31,   22,   28, 1146,  118,   34,
         55,  190, 1083,   35,   23,   52,  104,  234,  334,  444,  192,
         14,    1]))
====================
Accuracy Score: 0.009874723655121593
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.11894475805820923
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-0.,  1.,  2.,  3.,  4.], dtype=float32), array([1243, 1387, 1424, 1381, 1350]))
====================
Accuracy Score: 0.956963890935888
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.11331429871110768
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3., 4.], dtype=float32), array([1245, 1406, 1413, 1391, 1330]))
====================
Accuracy Score: 0.96138540899042
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 2.0649598568041005
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1.,  0.,  1.,  2.,  3.,  4.,  5.],
      dtype=float32), array([ 723,  255,  193,   65, 1058,  316,  457,  988, 1273,  128,  376,
        953]))
====================
Accuracy Score: 0.07000736919675755
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 2.0649598568041005
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1.,  0.,  1.,  2.,  3.,  4.,  5.],
      dtype=float32), array([ 723,  255,  193,   65, 1058,  316,  457,  988, 1273,  128,  376,
        953]))
====================
Accuracy Score: 0.07000736919675755
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.07740600537796977
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2, 1280, 1394, 1351, 1375, 1383]))
====================
Accuracy Score: 0.9809874723655122
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.07954709504840123
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2, 1275, 1406, 1349, 1373, 1380]))
====================
Accuracy Score: 0.9799557848194547
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 5.055042223040462
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-18., -17., -16., -15., -14., -13., -12., -11., -10.,  -9.,  -8.,
        -7.,  -6.,  -5.,  -4.,  -3.,  -2.,  -1.,   0.,   1.,   2.,   3.,
         4.,   5.,   6.,   7.,   8.,   9.,  10.,  11.,  12.,  13.],
      dtype=float32), array([   2,    8,   31,  188,  346,  224,  169,   98,   80,   63,   37,
         39,   45,  240,  945,  118,   38,   46, 1139,  141,   80,  200,
       1016,  114,   44,  112,  239,  331,  435,  203,   13,    1]))
====================
Accuracy Score: 0.03448784082535004
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 5.055042223040462
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-18., -17., -16., -15., -14., -13., -12., -11., -10.,  -9.,  -8.,
        -7.,  -6.,  -5.,  -4.,  -3.,  -2.,  -1.,   0.,   1.,   2.,   3.,
         4.,   5.,   6.,   7.,   8.,   9.,  10.,  11.,  12.,  13.],
      dtype=float32), array([   2,    8,   31,  188,  346,  224,  169,   98,   80,   63,   37,
         39,   45,  240,  945,  118,   38,   46, 1139,  141,   80,  200,
       1016,  114,   44,  112,  239,  331,  435,  203,   13,    1]))
====================
Accuracy Score: 0.03448784082535004
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.11894475805820923
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-0.,  1.,  2.,  3.,  4.], dtype=float32), array([1243, 1387, 1424, 1381, 1350]))
====================
Accuracy Score: 0.956963890935888
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.11331429871110768
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3., 4.], dtype=float32), array([1245, 1406, 1413, 1391, 1330]))
====================
Accuracy Score: 0.96138540899042
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 2.0649598568041005
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1.,  0.,  1.,  2.,  3.,  4.,  5.],
      dtype=float32), array([ 723,  255,  193,   65, 1058,  316,  457,  988, 1273,  128,  376,
        953]))
====================
Accuracy Score: 0.07000736919675755
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 2.0649598568041005
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1.,  0.,  1.,  2.,  3.,  4.,  5.],
      dtype=float32), array([ 723,  255,  193,   65, 1058,  316,  457,  988, 1273,  128,  376,
        953]))
====================
Accuracy Score: 0.07000736919675755
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.07740600537796977
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2, 1280, 1394, 1351, 1375, 1383]))
====================
Accuracy Score: 0.9809874723655122
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.07954709504840123
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2, 1275, 1406, 1349, 1373, 1380]))
====================
Accuracy Score: 0.9799557848194547
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 5.098525139985932
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-18., -17., -16., -15., -14., -13., -12., -11., -10.,  -9.,  -8.,
        -7.,  -6.,  -5.,  -4.,  -3.,  -2.,  -1.,   0.,   1.,   2.,   3.,
         4.,   5.,   6.,   7.,   8.,   9.,  10.,  11.,  12.,  13.],
      dtype=float32), array([   3,   11,   34,  182,  387,  214,  148,   94,   83,   57,   36,
         40,   45,  303,  884,  113,   39,   60, 1123,  144,   77,  187,
       1054,   88,   40,  111,  217,  342,  456,  194,   18,    1]))
====================
Accuracy Score: 0.0318349299926308
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 5.098525139985932
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-18., -17., -16., -15., -14., -13., -12., -11., -10.,  -9.,  -8.,
        -7.,  -6.,  -5.,  -4.,  -3.,  -2.,  -1.,   0.,   1.,   2.,   3.,
         4.,   5.,   6.,   7.,   8.,   9.,  10.,  11.,  12.,  13.],
      dtype=float32), array([   3,   11,   34,  182,  387,  214,  148,   94,   83,   57,   36,
         40,   45,  303,  884,  113,   39,   60, 1123,  144,   77,  187,
       1054,   88,   40,  111,  217,  342,  456,  194,   18,    1]))
====================
Accuracy Score: 0.0318349299926308
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.05637691246294852
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   1, 1287, 1399, 1347, 1364, 1387]))
====================
Accuracy Score: 0.982903463522476
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.055968928793905054
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.], dtype=float32), array([   1, 1289, 1415, 1327, 1355, 1398]))
====================
Accuracy Score: 0.984966838614591
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 2.2324359481837175
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.],
      dtype=float32), array([   1, 1157,   98,   31, 1276,  113, 1074,  286,  319, 1037,   36,
        526,  831]))
====================
Accuracy Score: 0.159174649963154
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 2.2324359481837175
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.],
      dtype=float32), array([   1, 1157,   98,   31, 1276,  113, 1074,  286,  319, 1037,   36,
        526,  831]))
====================
Accuracy Score: 0.159174649963154
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.04426832900121094
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2, 1300, 1396, 1330, 1363, 1394]))
====================
Accuracy Score: 0.9893883566691231
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.04484691729243397
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2, 1301, 1406, 1321, 1355, 1400]))
====================
Accuracy Score: 0.9901252763448785
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 6.193424270288331
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-19., -18., -17., -16., -15., -14., -13., -12., -11., -10.,  -9.,
        -8.,  -7.,  -6.,  -5.,  -4.,  -3.,  -2.,  -1.,   0.,   1.,   2.,
         3.,   4.,   5.,   6.,   7.,   8.,   9.,  10.,  11.,  12.,  13.,
        14.], dtype=float32), array([   4,   32,  122,  330,  316,  188,  115,   64,   61,   23,   33,
         12,   13,  139, 1076,  123,   22,   29,   24, 1137,  128,   35,
         48,  201, 1059,   53,   28,   44,  114,  228,  368,  449,  159,
          8]))
====================
Accuracy Score: 0.00899042004421518
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 6.193424270288331
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-19., -18., -17., -16., -15., -14., -13., -12., -11., -10.,  -9.,
        -8.,  -7.,  -6.,  -5.,  -4.,  -3.,  -2.,  -1.,   0.,   1.,   2.,
         3.,   4.,   5.,   6.,   7.,   8.,   9.,  10.,  11.,  12.,  13.,
        14.], dtype=float32), array([   4,   32,  122,  330,  316,  188,  115,   64,   61,   23,   33,
         12,   13,  139, 1076,  123,   22,   29,   24, 1137,  128,   35,
         48,  201, 1059,   53,   28,   44,  114,  228,  368,  449,  159,
          8]))
====================
Accuracy Score: 0.00899042004421518
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.05637691246294852
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   1, 1287, 1399, 1347, 1364, 1387]))
====================
Accuracy Score: 0.982903463522476
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.055968928793905054
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.], dtype=float32), array([   1, 1289, 1415, 1327, 1355, 1398]))
====================
Accuracy Score: 0.984966838614591
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 2.2294951031642007
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-5., -4., -3., -2., -1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.],
      dtype=float32), array([1151,  106,   31, 1280,  106, 1054,  305,  330, 1031,   37,  549,
        805]))
====================
Accuracy Score: 0.1578481945467944
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 2.2294951031642007
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-5., -4., -3., -2., -1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.],
      dtype=float32), array([1151,  106,   31, 1280,  106, 1054,  305,  330, 1031,   37,  549,
        805]))
====================
Accuracy Score: 0.1578481945467944
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.04426832900121094
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2, 1300, 1396, 1330, 1363, 1394]))
====================
Accuracy Score: 0.9893883566691231
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.04484691729243397
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2, 1301, 1406, 1321, 1355, 1400]))
====================
Accuracy Score: 0.9901252763448785
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 6.165587135769465
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-19., -18., -17., -16., -15., -14., -13., -12., -11., -10.,  -9.,
        -8.,  -7.,  -6.,  -5.,  -4.,  -3.,  -2.,  -1.,   0.,   1.,   2.,
         3.,   4.,   5.,   6.,   7.,   8.,   9.,  10.,  11.,  12.,  13.,
        14.,  15.], dtype=float32), array([   2,   15,  111,  323,  309,  213,  112,   76,   60,   31,   32,
         16,   10,  127, 1073,  135,   31,   22,   28, 1146,  118,   34,
         55,  190, 1083,   35,   23,   52,  104,  234,  334,  444,  192,
         14,    1]))
====================
Accuracy Score: 0.009874723655121593
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 6.165587135769465
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-19., -18., -17., -16., -15., -14., -13., -12., -11., -10.,  -9.,
        -8.,  -7.,  -6.,  -5.,  -4.,  -3.,  -2.,  -1.,   0.,   1.,   2.,
         3.,   4.,   5.,   6.,   7.,   8.,   9.,  10.,  11.,  12.,  13.,
        14.,  15.], dtype=float32), array([   2,   15,  111,  323,  309,  213,  112,   76,   60,   31,   32,
         16,   10,  127, 1073,  135,   31,   22,   28, 1146,  118,   34,
         55,  190, 1083,   35,   23,   52,  104,  234,  334,  444,  192,
         14,    1]))
====================
Accuracy Score: 0.009874723655121593
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.6967038436724846
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3.], dtype=float32), array([1130, 2641, 1700, 1314]))
====================
Accuracy Score: 0.3756816507000737
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.7061060833289681
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3.], dtype=float32), array([1127, 2687, 1830, 1141]))
====================
Accuracy Score: 0.3868828297715549
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.5257580937580228
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1.], dtype=float32), array([2748, 4037]))
====================
Accuracy Score: 0.20397936624907886
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.5257580937580228
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1.], dtype=float32), array([2748, 4037]))
====================
Accuracy Score: 0.20397936624907886
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.1407235772449828
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-0.,  1.,  2.,  3.,  4.], dtype=float32), array([1211, 1403, 1443, 1409, 1319]))
====================
Accuracy Score: 0.9425202652910832
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.14439531597216163
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-0.,  1.,  2.,  3.,  4.], dtype=float32), array([1198, 1428, 1462, 1399, 1298]))
====================
Accuracy Score: 0.9385408990420044
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.5546646864649647
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1., -0.,  1.,  2.,  3.], dtype=float32), array([1112, 1150,  580, 1836,  941, 1166]))
====================
Accuracy Score: 0.019749447310243185
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.5546646864649647
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1., -0.,  1.,  2.,  3.], dtype=float32), array([1112, 1150,  580, 1836,  941, 1166]))
====================
Accuracy Score: 0.019749447310243185
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.6967038436724846
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3.], dtype=float32), array([1130, 2641, 1700, 1314]))
====================
Accuracy Score: 0.3756816507000737
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.7061060833289681
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3.], dtype=float32), array([1127, 2687, 1830, 1141]))
====================
Accuracy Score: 0.3868828297715549
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.5257580937580228
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1.], dtype=float32), array([2748, 4037]))
====================
Accuracy Score: 0.20397936624907886
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.5257580937580228
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1.], dtype=float32), array([2748, 4037]))
====================
Accuracy Score: 0.20397936624907886
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.1407235772449828
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-0.,  1.,  2.,  3.,  4.], dtype=float32), array([1211, 1403, 1443, 1409, 1319]))
====================
Accuracy Score: 0.9425202652910832
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.14439531597216163
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-0.,  1.,  2.,  3.,  4.], dtype=float32), array([1198, 1428, 1462, 1399, 1298]))
====================
Accuracy Score: 0.9385408990420044
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.5546646864649647
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1., -0.,  1.,  2.,  3.], dtype=float32), array([1112, 1150,  580, 1836,  941, 1166]))
====================
Accuracy Score: 0.019749447310243185
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.5546646864649647
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1., -0.,  1.,  2.,  3.], dtype=float32), array([1112, 1150,  580, 1836,  941, 1166]))
====================
Accuracy Score: 0.019749447310243185
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.6582907453915083
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3.], dtype=float32), array([1236, 2661, 1510, 1378]))
====================
Accuracy Score: 0.40044215180545323
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.6563804686333031
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3.], dtype=float32), array([1278, 2591, 1537, 1379]))
====================
Accuracy Score: 0.41547531319086217
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.5180939873440265
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-0.,  1.], dtype=float32), array([2695, 4090]))
====================
Accuracy Score: 0.20574797347089166
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.5180939873440265
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-0.,  1.], dtype=float32), array([2695, 4090]))
====================
Accuracy Score: 0.20574797347089166
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.07849801543800815
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3., 4.], dtype=float32), array([1283, 1397, 1364, 1354, 1387]))
====================
Accuracy Score: 0.9792188651436994
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.07762647818447302
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3., 4.], dtype=float32), array([1279, 1424, 1338, 1355, 1389]))
====================
Accuracy Score: 0.9814296241709654
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.5165424494771458
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1.,  0.,  1.,  2.,  3.], dtype=float32), array([1262, 1178,  423, 1442, 1094, 1386]))
====================
Accuracy Score: 0.003537214443625645
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.5165424494771458
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1.,  0.,  1.,  2.,  3.], dtype=float32), array([1262, 1178,  423, 1442, 1094, 1386]))
====================
Accuracy Score: 0.003537214443625645
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.6582907453915083
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3.], dtype=float32), array([1236, 2661, 1510, 1378]))
====================
Accuracy Score: 0.40044215180545323
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.6563804686333031
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3.], dtype=float32), array([1278, 2591, 1537, 1379]))
====================
Accuracy Score: 0.41547531319086217
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.5180939873440265
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-0.,  1.], dtype=float32), array([2695, 4090]))
====================
Accuracy Score: 0.20574797347089166
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.5180939873440265
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-0.,  1.], dtype=float32), array([2695, 4090]))
====================
Accuracy Score: 0.20574797347089166
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.07849801543800815
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3., 4.], dtype=float32), array([1283, 1397, 1364, 1354, 1387]))
====================
Accuracy Score: 0.9792188651436994
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.07762647818447302
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3., 4.], dtype=float32), array([1279, 1424, 1338, 1355, 1389]))
====================
Accuracy Score: 0.9814296241709654
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.5174659988637698
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1.,  0.,  1.,  2.,  3.], dtype=float32), array([1258, 1180,  423, 1445, 1093, 1386]))
====================
Accuracy Score: 0.0042741341193809875
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.5174659988637698
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1.,  0.,  1.,  2.,  3.], dtype=float32), array([1258, 1180,  423, 1445, 1093, 1386]))
====================
Accuracy Score: 0.0042741341193809875
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.6967038436724846
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3.], dtype=float32), array([1130, 2641, 1700, 1314]))
====================
Accuracy Score: 0.3756816507000737
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.7061060833289681
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3.], dtype=float32), array([1127, 2687, 1830, 1141]))
====================
Accuracy Score: 0.3868828297715549
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.5257580937580228
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1.], dtype=float32), array([2748, 4037]))
====================
Accuracy Score: 0.20397936624907886
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.5257580937580228
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1.], dtype=float32), array([2748, 4037]))
====================
Accuracy Score: 0.20397936624907886
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.1407235772449828
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-0.,  1.,  2.,  3.,  4.], dtype=float32), array([1211, 1403, 1443, 1409, 1319]))
====================
Accuracy Score: 0.9425202652910832
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.14439531597216163
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-0.,  1.,  2.,  3.,  4.], dtype=float32), array([1198, 1428, 1462, 1399, 1298]))
====================
Accuracy Score: 0.9385408990420044
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.5546646864649647
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1., -0.,  1.,  2.,  3.], dtype=float32), array([1112, 1150,  580, 1836,  941, 1166]))
====================
Accuracy Score: 0.019749447310243185
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.5546646864649647
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1., -0.,  1.,  2.,  3.], dtype=float32), array([1112, 1150,  580, 1836,  941, 1166]))
====================
Accuracy Score: 0.019749447310243185
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.6967038436724846
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3.], dtype=float32), array([1130, 2641, 1700, 1314]))
====================
Accuracy Score: 0.3756816507000737
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.7061060833289681
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3.], dtype=float32), array([1127, 2687, 1830, 1141]))
====================
Accuracy Score: 0.3868828297715549
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.5257580937580228
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1.], dtype=float32), array([2748, 4037]))
====================
Accuracy Score: 0.20397936624907886
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.5257580937580228
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1.], dtype=float32), array([2748, 4037]))
====================
Accuracy Score: 0.20397936624907886
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.1407235772449828
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-0.,  1.,  2.,  3.,  4.], dtype=float32), array([1211, 1403, 1443, 1409, 1319]))
====================
Accuracy Score: 0.9425202652910832
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.14439531597216163
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-0.,  1.,  2.,  3.,  4.], dtype=float32), array([1198, 1428, 1462, 1399, 1298]))
====================
Accuracy Score: 0.9385408990420044
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.5546646864649647
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1., -0.,  1.,  2.,  3.], dtype=float32), array([1112, 1150,  580, 1836,  941, 1166]))
====================
Accuracy Score: 0.019749447310243185
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.5546646864649647
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1., -0.,  1.,  2.,  3.], dtype=float32), array([1112, 1150,  580, 1836,  941, 1166]))
====================
Accuracy Score: 0.019749447310243185
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.6582907453915083
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3.], dtype=float32), array([1236, 2661, 1510, 1378]))
====================
Accuracy Score: 0.40044215180545323
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.6563804686333031
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3.], dtype=float32), array([1278, 2591, 1537, 1379]))
====================
Accuracy Score: 0.41547531319086217
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.5180939873440265
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-0.,  1.], dtype=float32), array([2695, 4090]))
====================
Accuracy Score: 0.20574797347089166
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.5180939873440265
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-0.,  1.], dtype=float32), array([2695, 4090]))
====================
Accuracy Score: 0.20574797347089166
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.07849801543800815
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3., 4.], dtype=float32), array([1283, 1397, 1364, 1354, 1387]))
====================
Accuracy Score: 0.9792188651436994
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.07762647818447302
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3., 4.], dtype=float32), array([1279, 1424, 1338, 1355, 1389]))
====================
Accuracy Score: 0.9814296241709654
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.5165424494771458
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1.,  0.,  1.,  2.,  3.], dtype=float32), array([1262, 1178,  423, 1442, 1094, 1386]))
====================
Accuracy Score: 0.003537214443625645
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.5165424494771458
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1.,  0.,  1.,  2.,  3.], dtype=float32), array([1262, 1178,  423, 1442, 1094, 1386]))
====================
Accuracy Score: 0.003537214443625645
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.6582907453915083
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3.], dtype=float32), array([1236, 2661, 1510, 1378]))
====================
Accuracy Score: 0.40044215180545323
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.6563804686333031
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3.], dtype=float32), array([1278, 2591, 1537, 1379]))
====================
Accuracy Score: 0.41547531319086217
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.5180939873440265
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-0.,  1.], dtype=float32), array([2695, 4090]))
====================
Accuracy Score: 0.20574797347089166
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.5180939873440265
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-0.,  1.], dtype=float32), array([2695, 4090]))
====================
Accuracy Score: 0.20574797347089166
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.07849801543800815
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3., 4.], dtype=float32), array([1283, 1397, 1364, 1354, 1387]))
====================
Accuracy Score: 0.9792188651436994
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.07762647818447302
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3., 4.], dtype=float32), array([1279, 1424, 1338, 1355, 1389]))
====================
Accuracy Score: 0.9814296241709654
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.5174659988637698
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1.,  0.,  1.,  2.,  3.], dtype=float32), array([1258, 1180,  423, 1445, 1093, 1386]))
====================
Accuracy Score: 0.0042741341193809875
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gbtree', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.5174659988637698
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1.,  0.,  1.,  2.,  3.], dtype=float32), array([1258, 1180,  423, 1445, 1093, 1386]))
====================
Accuracy Score: 0.0042741341193809875
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.9073933436236754
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  9., 12.],
      dtype=float32), array([   3,    5,  205, 1887, 2765, 1822,   91,    3,    1,    1,    1,
          1]))
====================
Accuracy Score: 0.27885040530582167
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.926394877797329
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  7., 10.], dtype=float32), array([   7,  116, 2083, 3089, 1462,   24,    1,    1,    1,    1]))
====================
Accuracy Score: 0.2899042004421518
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 2.1857684494222
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-3., -2., -1.,  0.,  1.,  2.,  3.,  5.,  8.], dtype=float32), array([   8,  303, 1975, 3319, 1166,   11,    1,    1,    1]))
====================
Accuracy Score: 0.03507737656595431
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 2.1857684494222
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-3., -2., -1.,  0.,  1.,  2.,  3.,  5.,  8.], dtype=float32), array([   8,  303, 1975, 3319, 1166,   11,    1,    1,    1]))
====================
Accuracy Score: 0.03507737656595431
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.844356057274738
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8., 11.],
      dtype=float32), array([   6,  326, 1853, 2347, 2105,  143,    1,    1,    1,    1,    1]))
====================
Accuracy Score: 0.2900515843773029
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.8629446733627653
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  7., 10.], dtype=float32), array([   3,  225, 2091, 2563, 1849,   49,    2,    2,    1]))
====================
Accuracy Score: 0.2937361827560796
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 3.863173987681023
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1., -0.,  1.,  3.,  5., 10.],
      dtype=float32), array([   5,   30,  444, 1564, 1762, 2352,  600,   25,    1,    1,    1]))
====================
Accuracy Score: 0.0
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 3.863173987681023
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1., -0.,  1.,  3.,  5., 10.],
      dtype=float32), array([   5,   30,  444, 1564, 1762, 2352,  600,   25,    1,    1,    1]))
====================
Accuracy Score: 0.0
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.9073933436236754
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  9., 12.],
      dtype=float32), array([   3,    5,  205, 1887, 2765, 1822,   91,    3,    1,    1,    1,
          1]))
====================
Accuracy Score: 0.27885040530582167
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.926394877797329
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  7., 10.], dtype=float32), array([   7,  116, 2083, 3089, 1462,   24,    1,    1,    1,    1]))
====================
Accuracy Score: 0.2899042004421518
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 2.1857684494222
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-3., -2., -1.,  0.,  1.,  2.,  3.,  5.,  8.], dtype=float32), array([   8,  303, 1975, 3319, 1166,   11,    1,    1,    1]))
====================
Accuracy Score: 0.03507737656595431
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 2.1857684494222
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-3., -2., -1.,  0.,  1.,  2.,  3.,  5.,  8.], dtype=float32), array([   8,  303, 1975, 3319, 1166,   11,    1,    1,    1]))
====================
Accuracy Score: 0.03507737656595431
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.844356057274738
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8., 11.],
      dtype=float32), array([   6,  326, 1853, 2347, 2105,  143,    1,    1,    1,    1,    1]))
====================
Accuracy Score: 0.2900515843773029
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.8629446733627653
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  7., 10.], dtype=float32), array([   3,  225, 2091, 2563, 1849,   49,    2,    2,    1]))
====================
Accuracy Score: 0.2937361827560796
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 3.863173987681023
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1., -0.,  1.,  3.,  5., 10.],
      dtype=float32), array([   5,   30,  444, 1564, 1762, 2352,  600,   25,    1,    1,    1]))
====================
Accuracy Score: 0.0
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 3.863173987681023
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1., -0.,  1.,  3.,  5., 10.],
      dtype=float32), array([   5,   30,  444, 1564, 1762, 2352,  600,   25,    1,    1,    1]))
====================
Accuracy Score: 0.0
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.9073933436236754
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  9., 12.],
      dtype=float32), array([   3,    5,  205, 1887, 2765, 1822,   91,    3,    1,    1,    1,
          1]))
====================
Accuracy Score: 0.27885040530582167
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.926394877797329
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  7., 10.], dtype=float32), array([   7,  116, 2083, 3089, 1462,   24,    1,    1,    1,    1]))
====================
Accuracy Score: 0.2899042004421518
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 2.1857684494222
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-3., -2., -1.,  0.,  1.,  2.,  3.,  5.,  8.], dtype=float32), array([   8,  303, 1975, 3319, 1166,   11,    1,    1,    1]))
====================
Accuracy Score: 0.03507737656595431
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 2.1857684494222
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-3., -2., -1.,  0.,  1.,  2.,  3.,  5.,  8.], dtype=float32), array([   8,  303, 1975, 3319, 1166,   11,    1,    1,    1]))
====================
Accuracy Score: 0.03507737656595431
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.844356057274738
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8., 11.],
      dtype=float32), array([   6,  326, 1853, 2347, 2105,  143,    1,    1,    1,    1,    1]))
====================
Accuracy Score: 0.2900515843773029
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.8629446733627653
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  7., 10.], dtype=float32), array([   3,  225, 2091, 2563, 1849,   49,    2,    2,    1]))
====================
Accuracy Score: 0.2937361827560796
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 3.863173987681023
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1., -0.,  1.,  3.,  5., 10.],
      dtype=float32), array([   5,   30,  444, 1564, 1762, 2352,  600,   25,    1,    1,    1]))
====================
Accuracy Score: 0.0
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 3.863173987681023
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1., -0.,  1.,  3.,  5., 10.],
      dtype=float32), array([   5,   30,  444, 1564, 1762, 2352,  600,   25,    1,    1,    1]))
====================
Accuracy Score: 0.0
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.9073933436236754
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  9., 12.],
      dtype=float32), array([   3,    5,  205, 1887, 2765, 1822,   91,    3,    1,    1,    1,
          1]))
====================
Accuracy Score: 0.27885040530582167
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.926394877797329
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  7., 10.], dtype=float32), array([   7,  116, 2083, 3089, 1462,   24,    1,    1,    1,    1]))
====================
Accuracy Score: 0.2899042004421518
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 2.1857684494222
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-3., -2., -1.,  0.,  1.,  2.,  3.,  5.,  8.], dtype=float32), array([   8,  303, 1975, 3319, 1166,   11,    1,    1,    1]))
====================
Accuracy Score: 0.03507737656595431
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 2.1857684494222
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-3., -2., -1.,  0.,  1.,  2.,  3.,  5.,  8.], dtype=float32), array([   8,  303, 1975, 3319, 1166,   11,    1,    1,    1]))
====================
Accuracy Score: 0.03507737656595431
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.844356057274738
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8., 11.],
      dtype=float32), array([   6,  326, 1853, 2347, 2105,  143,    1,    1,    1,    1,    1]))
====================
Accuracy Score: 0.2900515843773029
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.8629446733627653
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  7., 10.], dtype=float32), array([   3,  225, 2091, 2563, 1849,   49,    2,    2,    1]))
====================
Accuracy Score: 0.2937361827560796
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 3.863173987681023
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1., -0.,  1.,  3.,  5., 10.],
      dtype=float32), array([   5,   30,  444, 1564, 1762, 2352,  600,   25,    1,    1,    1]))
====================
Accuracy Score: 0.0
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 3.863173987681023
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1., -0.,  1.,  3.,  5., 10.],
      dtype=float32), array([   5,   30,  444, 1564, 1762, 2352,  600,   25,    1,    1,    1]))
====================
Accuracy Score: 0.0
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.9073933436236754
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  9., 12.],
      dtype=float32), array([   3,    5,  205, 1887, 2765, 1822,   91,    3,    1,    1,    1,
          1]))
====================
Accuracy Score: 0.27885040530582167
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.926394877797329
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  7., 10.], dtype=float32), array([   7,  116, 2083, 3089, 1462,   24,    1,    1,    1,    1]))
====================
Accuracy Score: 0.2899042004421518
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 2.1857684494222
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-3., -2., -1.,  0.,  1.,  2.,  3.,  5.,  8.], dtype=float32), array([   8,  303, 1975, 3319, 1166,   11,    1,    1,    1]))
====================
Accuracy Score: 0.03507737656595431
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 2.1857684494222
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-3., -2., -1.,  0.,  1.,  2.,  3.,  5.,  8.], dtype=float32), array([   8,  303, 1975, 3319, 1166,   11,    1,    1,    1]))
====================
Accuracy Score: 0.03507737656595431
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.844356057274738
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8., 11.],
      dtype=float32), array([   6,  326, 1853, 2347, 2105,  143,    1,    1,    1,    1,    1]))
====================
Accuracy Score: 0.2900515843773029
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.8629446733627653
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  7., 10.], dtype=float32), array([   3,  225, 2091, 2563, 1849,   49,    2,    2,    1]))
====================
Accuracy Score: 0.2937361827560796
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 3.863173987681023
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1., -0.,  1.,  3.,  5., 10.],
      dtype=float32), array([   5,   30,  444, 1564, 1762, 2352,  600,   25,    1,    1,    1]))
====================
Accuracy Score: 0.0
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 3.863173987681023
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1., -0.,  1.,  3.,  5., 10.],
      dtype=float32), array([   5,   30,  444, 1564, 1762, 2352,  600,   25,    1,    1,    1]))
====================
Accuracy Score: 0.0
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.9073933436236754
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  9., 12.],
      dtype=float32), array([   3,    5,  205, 1887, 2765, 1822,   91,    3,    1,    1,    1,
          1]))
====================
Accuracy Score: 0.27885040530582167
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.926394877797329
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  7., 10.], dtype=float32), array([   7,  116, 2083, 3089, 1462,   24,    1,    1,    1,    1]))
====================
Accuracy Score: 0.2899042004421518
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 2.1857684494222
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-3., -2., -1.,  0.,  1.,  2.,  3.,  5.,  8.], dtype=float32), array([   8,  303, 1975, 3319, 1166,   11,    1,    1,    1]))
====================
Accuracy Score: 0.03507737656595431
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 2.1857684494222
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-3., -2., -1.,  0.,  1.,  2.,  3.,  5.,  8.], dtype=float32), array([   8,  303, 1975, 3319, 1166,   11,    1,    1,    1]))
====================
Accuracy Score: 0.03507737656595431
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.844356057274738
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8., 11.],
      dtype=float32), array([   6,  326, 1853, 2347, 2105,  143,    1,    1,    1,    1,    1]))
====================
Accuracy Score: 0.2900515843773029
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.8629446733627653
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  7., 10.], dtype=float32), array([   3,  225, 2091, 2563, 1849,   49,    2,    2,    1]))
====================
Accuracy Score: 0.2937361827560796
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 3.863173987681023
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1., -0.,  1.,  3.,  5., 10.],
      dtype=float32), array([   5,   30,  444, 1564, 1762, 2352,  600,   25,    1,    1,    1]))
====================
Accuracy Score: 0.0
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 3.863173987681023
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1., -0.,  1.,  3.,  5., 10.],
      dtype=float32), array([   5,   30,  444, 1564, 1762, 2352,  600,   25,    1,    1,    1]))
====================
Accuracy Score: 0.0
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.9073933436236754
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  9., 12.],
      dtype=float32), array([   3,    5,  205, 1887, 2765, 1822,   91,    3,    1,    1,    1,
          1]))
====================
Accuracy Score: 0.27885040530582167
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.926394877797329
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  7., 10.], dtype=float32), array([   7,  116, 2083, 3089, 1462,   24,    1,    1,    1,    1]))
====================
Accuracy Score: 0.2899042004421518
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 2.1857684494222
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-3., -2., -1.,  0.,  1.,  2.,  3.,  5.,  8.], dtype=float32), array([   8,  303, 1975, 3319, 1166,   11,    1,    1,    1]))
====================
Accuracy Score: 0.03507737656595431
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 2.1857684494222
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-3., -2., -1.,  0.,  1.,  2.,  3.,  5.,  8.], dtype=float32), array([   8,  303, 1975, 3319, 1166,   11,    1,    1,    1]))
====================
Accuracy Score: 0.03507737656595431
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.844356057274738
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8., 11.],
      dtype=float32), array([   6,  326, 1853, 2347, 2105,  143,    1,    1,    1,    1,    1]))
====================
Accuracy Score: 0.2900515843773029
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.8629446733627653
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  7., 10.], dtype=float32), array([   3,  225, 2091, 2563, 1849,   49,    2,    2,    1]))
====================
Accuracy Score: 0.2937361827560796
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 3.863173987681023
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1., -0.,  1.,  3.,  5., 10.],
      dtype=float32), array([   5,   30,  444, 1564, 1762, 2352,  600,   25,    1,    1,    1]))
====================
Accuracy Score: 0.0
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 3.863173987681023
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1., -0.,  1.,  3.,  5., 10.],
      dtype=float32), array([   5,   30,  444, 1564, 1762, 2352,  600,   25,    1,    1,    1]))
====================
Accuracy Score: 0.0
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.9073933436236754
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  9., 12.],
      dtype=float32), array([   3,    5,  205, 1887, 2765, 1822,   91,    3,    1,    1,    1,
          1]))
====================
Accuracy Score: 0.27885040530582167
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.926394877797329
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  7., 10.], dtype=float32), array([   7,  116, 2083, 3089, 1462,   24,    1,    1,    1,    1]))
====================
Accuracy Score: 0.2899042004421518
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 2.1857684494222
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-3., -2., -1.,  0.,  1.,  2.,  3.,  5.,  8.], dtype=float32), array([   8,  303, 1975, 3319, 1166,   11,    1,    1,    1]))
====================
Accuracy Score: 0.03507737656595431
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 2.1857684494222
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-3., -2., -1.,  0.,  1.,  2.,  3.,  5.,  8.], dtype=float32), array([   8,  303, 1975, 3319, 1166,   11,    1,    1,    1]))
====================
Accuracy Score: 0.03507737656595431
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.844356057274738
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8., 11.],
      dtype=float32), array([   6,  326, 1853, 2347, 2105,  143,    1,    1,    1,    1,    1]))
====================
Accuracy Score: 0.2900515843773029
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.8629446733627653
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  7., 10.], dtype=float32), array([   3,  225, 2091, 2563, 1849,   49,    2,    2,    1]))
====================
Accuracy Score: 0.2937361827560796
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 3.863173987681023
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1., -0.,  1.,  3.,  5., 10.],
      dtype=float32), array([   5,   30,  444, 1564, 1762, 2352,  600,   25,    1,    1,    1]))
====================
Accuracy Score: 0.0
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 3.863173987681023
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1., -0.,  1.,  3.,  5., 10.],
      dtype=float32), array([   5,   30,  444, 1564, 1762, 2352,  600,   25,    1,    1,    1]))
====================
Accuracy Score: 0.0
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.1072207944834154
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([1., 2., 3., 4., 5.], dtype=float32), array([ 496, 6115,  170,    3,    1]))
====================
Accuracy Score: 0.2585114222549742
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.1061758182553043
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([1., 2., 3., 4.], dtype=float32), array([ 872, 5770,  141,    2]))
====================
Accuracy Score: 0.29447310243183494
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.7578229614802519
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1.], dtype=float32), array([5205, 1580]))
====================
Accuracy Score: 0.19557848194546795
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.7578229614802519
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1.], dtype=float32), array([5205, 1580]))
====================
Accuracy Score: 0.19557848194546795
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.9767191877046445
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  6.,  7.,  9.], dtype=float32), array([   7,   64, 1504, 3913, 1283,   11,    1,    1,    1]))
====================
Accuracy Score: 0.28828297715549006
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.9936379917860909
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  8.], dtype=float32), array([   3,   29, 1754, 4108,  883,    5,    1,    1,    1]))
====================
Accuracy Score: 0.30994841562269715
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.9267739252222313
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2,  584, 5116, 1080,    1,    1,    1]))
====================
Accuracy Score: 0.1963154016212233
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.9267739252222313
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2,  584, 5116, 1080,    1,    1,    1]))
====================
Accuracy Score: 0.1963154016212233
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.1072207944834154
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([1., 2., 3., 4., 5.], dtype=float32), array([ 496, 6115,  170,    3,    1]))
====================
Accuracy Score: 0.2585114222549742
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.1061758182553043
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([1., 2., 3., 4.], dtype=float32), array([ 872, 5770,  141,    2]))
====================
Accuracy Score: 0.29447310243183494
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.7578229614802519
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1.], dtype=float32), array([5205, 1580]))
====================
Accuracy Score: 0.19557848194546795
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.7578229614802519
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1.], dtype=float32), array([5205, 1580]))
====================
Accuracy Score: 0.19557848194546795
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.9767191877046445
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  6.,  7.,  9.], dtype=float32), array([   7,   64, 1504, 3913, 1283,   11,    1,    1,    1]))
====================
Accuracy Score: 0.28828297715549006
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.9936379917860909
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  8.], dtype=float32), array([   3,   29, 1754, 4108,  883,    5,    1,    1,    1]))
====================
Accuracy Score: 0.30994841562269715
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.9267739252222313
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2,  584, 5116, 1080,    1,    1,    1]))
====================
Accuracy Score: 0.1963154016212233
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.9267739252222313
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2,  584, 5116, 1080,    1,    1,    1]))
====================
Accuracy Score: 0.1963154016212233
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.1072207944834154
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([1., 2., 3., 4., 5.], dtype=float32), array([ 496, 6115,  170,    3,    1]))
====================
Accuracy Score: 0.2585114222549742
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.1061758182553043
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([1., 2., 3., 4.], dtype=float32), array([ 872, 5770,  141,    2]))
====================
Accuracy Score: 0.29447310243183494
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.7578229614802519
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1.], dtype=float32), array([5205, 1580]))
====================
Accuracy Score: 0.19557848194546795
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.7578229614802519
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1.], dtype=float32), array([5205, 1580]))
====================
Accuracy Score: 0.19557848194546795
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.9767191877046445
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  6.,  7.,  9.], dtype=float32), array([   7,   64, 1504, 3913, 1283,   11,    1,    1,    1]))
====================
Accuracy Score: 0.28828297715549006
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.9936379917860909
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  8.], dtype=float32), array([   3,   29, 1754, 4108,  883,    5,    1,    1,    1]))
====================
Accuracy Score: 0.30994841562269715
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.9267739252222313
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2,  584, 5116, 1080,    1,    1,    1]))
====================
Accuracy Score: 0.1963154016212233
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.9267739252222313
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2,  584, 5116, 1080,    1,    1,    1]))
====================
Accuracy Score: 0.1963154016212233
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.1072207944834154
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([1., 2., 3., 4., 5.], dtype=float32), array([ 496, 6115,  170,    3,    1]))
====================
Accuracy Score: 0.2585114222549742
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.1061758182553043
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([1., 2., 3., 4.], dtype=float32), array([ 872, 5770,  141,    2]))
====================
Accuracy Score: 0.29447310243183494
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.7578229614802519
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1.], dtype=float32), array([5205, 1580]))
====================
Accuracy Score: 0.19557848194546795
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.7578229614802519
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1.], dtype=float32), array([5205, 1580]))
====================
Accuracy Score: 0.19557848194546795
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.9767191877046445
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  6.,  7.,  9.], dtype=float32), array([   7,   64, 1504, 3913, 1283,   11,    1,    1,    1]))
====================
Accuracy Score: 0.28828297715549006
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.9936379917860909
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  8.], dtype=float32), array([   3,   29, 1754, 4108,  883,    5,    1,    1,    1]))
====================
Accuracy Score: 0.30994841562269715
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.9267739252222313
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2,  584, 5116, 1080,    1,    1,    1]))
====================
Accuracy Score: 0.1963154016212233
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 0, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.9267739252222313
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2,  584, 5116, 1080,    1,    1,    1]))
====================
Accuracy Score: 0.1963154016212233
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.1072207944834154
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([1., 2., 3., 4., 5.], dtype=float32), array([ 496, 6115,  170,    3,    1]))
====================
Accuracy Score: 0.2585114222549742
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.1061758182553043
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([1., 2., 3., 4.], dtype=float32), array([ 872, 5770,  141,    2]))
====================
Accuracy Score: 0.29447310243183494
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.7578229614802519
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1.], dtype=float32), array([5205, 1580]))
====================
Accuracy Score: 0.19557848194546795
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.7578229614802519
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1.], dtype=float32), array([5205, 1580]))
====================
Accuracy Score: 0.19557848194546795
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.9767191877046445
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  6.,  7.,  9.], dtype=float32), array([   7,   64, 1504, 3913, 1283,   11,    1,    1,    1]))
====================
Accuracy Score: 0.28828297715549006
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.9936379917860909
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  8.], dtype=float32), array([   3,   29, 1754, 4108,  883,    5,    1,    1,    1]))
====================
Accuracy Score: 0.30994841562269715
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.9267739252222313
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2,  584, 5116, 1080,    1,    1,    1]))
====================
Accuracy Score: 0.1963154016212233
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.9267739252222313
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2,  584, 5116, 1080,    1,    1,    1]))
====================
Accuracy Score: 0.1963154016212233
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.1072207944834154
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([1., 2., 3., 4., 5.], dtype=float32), array([ 496, 6115,  170,    3,    1]))
====================
Accuracy Score: 0.2585114222549742
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.1061758182553043
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([1., 2., 3., 4.], dtype=float32), array([ 872, 5770,  141,    2]))
====================
Accuracy Score: 0.29447310243183494
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.7578229614802519
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1.], dtype=float32), array([5205, 1580]))
====================
Accuracy Score: 0.19557848194546795
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.7578229614802519
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1.], dtype=float32), array([5205, 1580]))
====================
Accuracy Score: 0.19557848194546795
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.9767191877046445
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  6.,  7.,  9.], dtype=float32), array([   7,   64, 1504, 3913, 1283,   11,    1,    1,    1]))
====================
Accuracy Score: 0.28828297715549006
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.9936379917860909
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  8.], dtype=float32), array([   3,   29, 1754, 4108,  883,    5,    1,    1,    1]))
====================
Accuracy Score: 0.30994841562269715
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.9267739252222313
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2,  584, 5116, 1080,    1,    1,    1]))
====================
Accuracy Score: 0.1963154016212233
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 3, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.9267739252222313
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2,  584, 5116, 1080,    1,    1,    1]))
====================
Accuracy Score: 0.1963154016212233
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.1072207944834154
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([1., 2., 3., 4., 5.], dtype=float32), array([ 496, 6115,  170,    3,    1]))
====================
Accuracy Score: 0.2585114222549742
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.1061758182553043
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([1., 2., 3., 4.], dtype=float32), array([ 872, 5770,  141,    2]))
====================
Accuracy Score: 0.29447310243183494
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.7578229614802519
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1.], dtype=float32), array([5205, 1580]))
====================
Accuracy Score: 0.19557848194546795
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.7578229614802519
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1.], dtype=float32), array([5205, 1580]))
====================
Accuracy Score: 0.19557848194546795
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.9767191877046445
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  6.,  7.,  9.], dtype=float32), array([   7,   64, 1504, 3913, 1283,   11,    1,    1,    1]))
====================
Accuracy Score: 0.28828297715549006
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.9936379917860909
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  8.], dtype=float32), array([   3,   29, 1754, 4108,  883,    5,    1,    1,    1]))
====================
Accuracy Score: 0.30994841562269715
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.9267739252222313
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2,  584, 5116, 1080,    1,    1,    1]))
====================
Accuracy Score: 0.1963154016212233
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 0.1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.9267739252222313
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2,  584, 5116, 1080,    1,    1,    1]))
====================
Accuracy Score: 0.1963154016212233
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.1072207944834154
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([1., 2., 3., 4., 5.], dtype=float32), array([ 496, 6115,  170,    3,    1]))
====================
Accuracy Score: 0.2585114222549742
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.1061758182553043
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([1., 2., 3., 4.], dtype=float32), array([ 872, 5770,  141,    2]))
====================
Accuracy Score: 0.29447310243183494
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.7578229614802519
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1.], dtype=float32), array([5205, 1580]))
====================
Accuracy Score: 0.19557848194546795
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.7578229614802519
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1.], dtype=float32), array([5205, 1580]))
====================
Accuracy Score: 0.19557848194546795
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.9767191877046445
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  6.,  7.,  9.], dtype=float32), array([   7,   64, 1504, 3913, 1283,   11,    1,    1,    1]))
====================
Accuracy Score: 0.28828297715549006
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.9936379917860909
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-1.,  0.,  1.,  2.,  3.,  4.,  5.,  6.,  8.], dtype=float32), array([   3,   29, 1754, 4108,  883,    5,    1,    1,    1]))
====================
Accuracy Score: 0.30994841562269715
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 1.9267739252222313
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2,  584, 5116, 1080,    1,    1,    1]))
====================
Accuracy Score: 0.1963154016212233
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'gblinear', 'gamma': 0, 'learning_rate': 0.01, 'max_delta_step': 5, 'max_depth': 4, 'min_child_weight': 1, 'n_estimators': 400, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 1.9267739252222313
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-2., -1., -0.,  1.,  2.,  3.,  4.], dtype=float32), array([   2,  584, 5116, 1080,    1,    1,    1]))
====================
Accuracy Score: 0.1963154016212233
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'dart', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'dart', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 0.11894469288402211
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-0.,  1.,  2.,  3.,  4.], dtype=float32), array([1243, 1387, 1424, 1381, 1350]))
====================
Accuracy Score: 0.956963890935888
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'dart', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'dart', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'reg:linear', 'random_state': 123, 'scale_pos_weight': 2}
Mean Absolute Error : 0.11331431612690847
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([0., 1., 2., 3., 4.], dtype=float32), array([1245, 1406, 1413, 1391, 1330]))
====================
Accuracy Score: 0.96138540899042
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'dart', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'dart', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 1}
Mean Absolute Error : 2.0560123707717537
====================
(array([0, 1, 2, 3, 4]), array([1317, 1397, 1302, 1362, 1407]))
(array([-6., -5., -4., -3., -2., -1.,  0.,  1.,  2.,  3.,  4.,  5.],
      dtype=float32), array([ 690,  286,  192,   66, 1042,  333,  670,  774, 1274,  129,  381,
        948]))
====================
Accuracy Score: 0.0711864406779661
======Payload========
{'parameters': ['base_score', 'booster', 'gamma', 'learning_rate', 'max_delta_step', 'max_depth', 'min_child_weight', 'n_estimators', 'n_jobs', 'objective', 'random_state', 'scale_pos_weight'], 'data': {'base_score': 0.5, 'booster': 'dart', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}, 'dataset': 'df_2017_downsampled.csv', 'test_size': 0.2}
=====Parameters=======
{'base_score': 0.5, 'booster': 'dart', 'gamma': 0, 'learning_rate': 0.1, 'max_delta_step': 0, 'max_depth': 3, 'min_child_weight': 0.1, 'n_estimators': 100, 'n_jobs': 1, 'objective': 'rank:pairwise', 'random_state': 123, 'scale_pos_weight': 2}
